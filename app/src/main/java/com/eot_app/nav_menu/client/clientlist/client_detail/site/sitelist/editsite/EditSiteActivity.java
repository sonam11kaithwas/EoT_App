package com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite;import android.Manifest;import android.content.Context;import android.content.Intent;import android.content.pm.PackageManager;import android.location.Location;import android.location.LocationManager;import android.os.Build;import android.os.Bundle;import android.text.Editable;import android.text.TextUtils;import android.text.TextWatcher;import android.util.Log;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.AutoCompleteTextView;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.RelativeLayout;import android.widget.TextView;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.eot_app.R;import com.eot_app.nav_menu.client.clientlist.client_detail.contact.client_dao.ContactData;import com.eot_app.nav_menu.client.clientlist.client_detail.site.Client_Site_List;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.Site_model;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitedb.AddSiteModel;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitedb.EditSiteModel;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitedb.SpinnerCountrySite;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitemvp.EditSite_Pc;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitemvp.EditSite_Pi;import com.eot_app.nav_menu.client.clientlist.client_detail.site.sitelist.editsite.editsitemvp.EditSite_View;import com.eot_app.nav_menu.custom_fileds.custom_filed_adpter.CustomFiledQueAdpter;import com.eot_app.nav_menu.custom_fileds.custom_model.CustOmFormQuestionsRes;import com.eot_app.nav_menu.jobs.add_job.adapters.FilterAdapterContact;import com.eot_app.nav_menu.jobs.add_job.adapters.FilterCountry;import com.eot_app.nav_menu.jobs.add_job.adapters.FilterStates;import com.eot_app.nav_menu.jobs.job_detail.form_form.get_qus_list.ans_model.Ans_Req;import com.eot_app.nav_menu.jobs.job_detail.form_form.get_qus_list.ans_model.Answer;import com.eot_app.nav_menu.jobs.job_detail.form_form.get_qus_list.qus_model.AnswerModel;import com.eot_app.utility.AppConstant;import com.eot_app.utility.AppUtility;import com.eot_app.utility.App_preference;import com.eot_app.utility.Country;import com.eot_app.utility.CurrLatLngCntrlr;import com.eot_app.utility.EotApp;import com.eot_app.utility.States;import com.eot_app.utility.language_support.LanguageController;import com.google.android.material.textfield.TextInputLayout;import com.hypertrack.hyperlog.HyperLog;import java.text.DecimalFormat;import java.util.ArrayList;import java.util.List;import java.util.concurrent.Callable;public class EditSiteActivity extends AppCompatActivity implements EditSite_View, View.OnClickListener,        TextWatcher, RadioGroup.OnCheckedChangeListener {    public static final int LOCATION_REQUEST = 1000;    private final boolean selfSite = false;    ArrayList<CustOmFormQuestionsRes> custOmFormQuestionsList = new ArrayList<>();    ArrayList<Answer> answerArrayList = new ArrayList<>();    LocationManager locationManager;    private Site_model siteData;    private Button site_btn;    private EditSite_Pi editSite_pi;    private String cltId;    private EditText site_name, site_add, site_city, site_postal, edt_lng, edt_lat;    private AutoCompleteTextView auto_cntry, state_auto, auto_exitingContact;    private CheckBox site_default;    private int cntryId, stateId;    private RelativeLayout relative_main;    private TextInputLayout input_layout_sitepostal, job_country_layout, input_layout_sitecity, input_layout_siteadr, site_lat_layout, site_lng_layout, input_layout_sitename, site_country_layout, site_state_layout, exitingContact_layout;    private TextInputLayout input_layout_name, input_layout_con_email, input_layout_mobile, input_layout_Alternate, input_layout_Fax, input_layout_skype,            input_layout_twitter;    private EditText con_name, con_email, con_mob, con_alternate, con_fax, con_skype, con_twitter;    private View lng_view, lat_view;    private TextView contact;    private RadioButton radio_exiting, radio_newContact;    private RadioGroup rediogrp;    private String isAddContact = "0", conId = "";    private LinearLayout contactlayout;    private RecyclerView recyclerView_customForm;    private CustomFiledQueAdpter adapter;    private View lat_lng_view_lay;    private TextView lat_lng_txt_lable;    @Override    public void onCheckedChanged(RadioGroup group, int checkedId) {        switch (checkedId) {            case R.id.radio_exiting:                existingContactShow();                break;            case R.id.radio_newContact:                CreateNewContactView();                break;        }    }    private void existingContactShow() {        isAddContact = "0";        if (siteData != null) {            conId = siteData.getConId();        }        exitingContact_layout.setVisibility(View.VISIBLE);        contactlayout.setVisibility(View.GONE);        con_name.setText("");        con_email.setText("");        con_mob.setText("");        con_alternate.setText("");        con_fax.setText("");        con_skype.setText("");        con_twitter.setText("");    }    private void CreateNewContactView() {        isAddContact = "1";        conId = "";        auto_exitingContact.setText("");        exitingContact_layout.setVisibility(View.GONE);        contactlayout.setVisibility(View.VISIBLE);    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_add_sitenew);        editSite_pi = new EditSite_Pc(this);        relative_main = findViewById(R.id.relative_main);        AppUtility.setupUI(relative_main, EditSiteActivity.this);        initializelables();        intializeView();        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);        initilizeTextInputLayout();        editSite_pi.getCountryList();        Intent intent = getIntent();        Bundle bundle = intent.getExtras();        if (getIntent().hasExtra("siteEdit")) {            siteData = bundle.getParcelable("siteEdit");        } else {            cltId = (String) bundle.get("siteAdd");        }        site_btn = findViewById(R.id.site_btn);        site_btn.setOnClickListener(this);        state_auto.setOnClickListener(this);        auto_cntry.setOnClickListener(this);        if (siteData == null) {            getSupportActionBar().setTitle(LanguageController.getInstance().getMobileMsgByKey(AppConstant.add_site_screen_title));            getSupportActionBar().setDisplayHomeAsUpEnabled(true);            site_btn.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.create_project));            setCompanySettingAdrs();            editSite_pi.getContactList(cltId);            setCustomFieldDataForSite(App_preference.getSharedprefInstance().getSiteCustomFiled());        } else {            getSupportActionBar().setTitle(LanguageController.getInstance().getMobileMsgByKey(AppConstant.edit_site_screen_title));            getSupportActionBar().setDisplayHomeAsUpEnabled(true);            site_btn.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.update_btn));            editSite_pi.setEditSiteData(siteData.getSiteId());            editSite_pi.getContactList(siteData.getCltId());        }    }    @Override    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {        Log.e("permission", "permission");        switch (requestCode) {            case LOCATION_REQUEST: {                //location for FW                if (grantResults.length > 0                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {                    getLocation();                } else {                    HyperLog.i("EditSiteActivity", "Location Permission denied from user");                }                break;            }        }        super.onRequestPermissionsResult(requestCode, permissions, grantResults);    }    private void getLocation() {        try {            if (ActivityCompat.checkSelfPermission(                    EditSiteActivity.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED                    && ActivityCompat.checkSelfPermission(                    EditSiteActivity.this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, LOCATION_REQUEST);            } else {                Location locationGPS = null;                try {                    if (Build.VERSION.SDK_INT >= 30) {                        locationGPS = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);                        HyperLog.i("EditSiteActivity", "getLocation-" + "above version 11");                    } else {                        locationGPS = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);                        HyperLog.i("EditSiteActivity", "getLocation-" + "below version 10");                    }                } catch (Exception exception) {                    exception.getMessage();                    getLatLngCntr();                    HyperLog.i("EditSiteActivity", "getLocation-" + exception.getMessage());                }                if (locationGPS != null) {                    double lat = locationGPS.getLatitude();                    double longi = locationGPS.getLongitude();                    try {                        DecimalFormat dFormat = new DecimalFormat("#.######");                        lat = Double.valueOf(dFormat.format(lat));                        longi = Double.valueOf(dFormat.format(longi));                    } catch (Exception e) {                        e.printStackTrace();                        lat = locationGPS.getLatitude();                        longi = locationGPS.getLongitude();                    }                    String latitude = String.valueOf(lat);                    String longitude = String.valueOf(longi);                    edt_lat.setText(latitude);                    edt_lng.setText(longitude);                } else {                    HyperLog.i("EditSiteActivity", "getLocation-" + "Unable to find location.");                    getLatLngCntr();                    // Toast.makeText(this, "Unable to find location.", Toast.LENGTH_SHORT).show();                }            }        } catch (Exception exception) {            HyperLog.i("EditSiteActivity", exception.getMessage());            getLatLngCntr();            exception.getMessage();        }    }    private void getLatLngCntr() {        CurrLatLngCntrlr.getInstance().getCurrLatLng(new CurrLatLngCntrlr.GetLatLng() {            @Override            public void getLatLngs(String lat, String lng) {                edt_lat.setText(lat);                edt_lng.setText(lng);            }        });    }    /*** Add Custom Filed For New Site******/    private void setCustomFieldDataForSite(ArrayList<CustOmFormQuestionsRes> siteCustomFiled) {        Log.e("TAG :", "is here");        if (siteCustomFiled != null && siteCustomFiled.size() > 0) {            this.custOmFormQuestionsList = siteCustomFiled;            adapter = new CustomFiledQueAdpter(custOmFormQuestionsList, this, new CustomFiledQueAdpter.CustomFiledCallBack() {                @Override                public void CustomFiledsList() {                }            });            recyclerView_customForm.setItemAnimator(new DefaultItemAnimator());            recyclerView_customForm.setAdapter(adapter);        }    }    @Override    public void setCustomFieldData(Site_model site_model) {        if (site_model != null && site_model.getCustomFieldArray() != null && site_model.getCustomFieldArray().size() > 0) {            this.custOmFormQuestionsList = (ArrayList<CustOmFormQuestionsRes>) site_model.getCustomFieldArray();            adapter = new CustomFiledQueAdpter(custOmFormQuestionsList, this, new CustomFiledQueAdpter.CustomFiledCallBack() {                @Override                public void CustomFiledsList() {                }            });            recyclerView_customForm.setItemAnimator(new DefaultItemAnimator());            recyclerView_customForm.setAdapter(adapter);        }    }    /*********/    private void setCompanySettingAdrs() {        auto_cntry.setText(SpinnerCountrySite.getCountryNameById(App_preference.getSharedprefInstance().getCompanySettingsDetails().getCtry()));        editSite_pi.getStateList((App_preference.getSharedprefInstance().getCompanySettingsDetails().getCtry()));        site_state_layout.setHintEnabled(true);        state_auto.setText(SpinnerCountrySite.getStatenameById(App_preference.getSharedprefInstance().getCompanySettingsDetails().getCtry(), App_preference.getSharedprefInstance().getCompanySettingsDetails().getState()));        site_city.setText(App_preference.getSharedprefInstance().getCompanySettingsDetails().getCity());        stateId = Integer.parseInt(App_preference.getSharedprefInstance().getCompanySettingsDetails().getState());        cntryId = Integer.parseInt(App_preference.getSharedprefInstance().getCompanySettingsDetails().getCtry());    }    private void intializeView() {        lat_view = findViewById(R.id.lat_view);        lng_view = findViewById(R.id.lng_view);        /** get hide/show lat/lng field persion*/        if (App_preference.getSharedprefInstance().getCompanySettingsDetails().getIsJobLatLngEnable().equals("0")) {            lng_view.setVisibility(View.GONE);            lat_view.setVisibility(View.GONE);            site_lat_layout.setVisibility(View.GONE);            site_lng_layout.setVisibility(View.GONE);            lat_lng_view_lay.setVisibility(View.GONE);        }    }    @Override    public void setContactList(List<ContactData> contactList) {        AppUtility.autocompletetextviewPopUpWindow(auto_exitingContact);        final FilterAdapterContact filterContact = new FilterAdapterContact(this,                R.layout.custom_adapter_item_layout, (ArrayList<ContactData>) contactList);        auto_exitingContact.setAdapter(filterContact);        auto_exitingContact.setThreshold(1);        auto_exitingContact.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                ContactData contactData = (ContactData) ((ListView) adapterView).getAdapter().getItem(i);                conId = contactData.getConId();            }        });        auto_exitingContact.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if (charSequence.length() >= 1) {                    exitingContact_layout.setHintEnabled(true);                } else if (charSequence.length() <= 0) {                    exitingContact_layout.setHintEnabled(false);                }            }            @Override            public void afterTextChanged(Editable editable) {            }        });    }    private void initializelables() {        site_name = findViewById(R.id.site_name);        site_name.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.site_name) + " *");        site_add = findViewById(R.id.site_add);        site_add.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.address) + " *");        auto_cntry = findViewById(R.id.auto_cntry);        auto_cntry.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.country) + " *");        state_auto = findViewById(R.id.state_auto);        state_auto.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.state) + " *");        site_city = findViewById(R.id.site_city);        site_city.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.city));        site_postal = findViewById(R.id.site_postal);        site_postal.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.postal_code));        site_lat_layout = findViewById(R.id.site_lat_layout);        edt_lat = findViewById(R.id.edt_lat);        edt_lat.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.latitude));        site_lng_layout = findViewById(R.id.site_lng_layout);        edt_lng = findViewById(R.id.edt_lng);        edt_lng.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.longitued));        site_default = findViewById(R.id.site_default);        site_default.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.site_default_checkBox));        contact = findViewById(R.id.contact);        contact.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.contact));        rediogrp = findViewById(R.id.rediogrp);        radio_exiting = findViewById(R.id.radio_exiting);        radio_exiting.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.existing));        radio_newContact = findViewById(R.id.radio_newContact);        radio_newContact.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.create_new_contact));        rediogrp.setOnCheckedChangeListener(this);        contactlayout = findViewById(R.id.contactlayout);        auto_exitingContact = findViewById(R.id.auto_exitingContact);        auto_exitingContact.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.contact));        auto_exitingContact.setOnClickListener(this);        /****find contact views***/        input_layout_name = findViewById(R.id.input_layout_name);        input_layout_con_email = findViewById(R.id.input_layout_con_email);        input_layout_mobile = findViewById(R.id.input_layout_mobile);        input_layout_Alternate = findViewById(R.id.input_layout_Alternate);        input_layout_Fax = findViewById(R.id.input_layout_Fax);        input_layout_skype = findViewById(R.id.input_layout_skype);        input_layout_twitter = findViewById(R.id.input_layout_twitter);        con_name = findViewById(R.id.con_name);        con_name.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.contact_name) + " *");        con_email = findViewById(R.id.con_email);        con_email.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.email));//+ " *"        con_mob = findViewById(R.id.con_mob);        con_mob.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.mob_no));//+ " *"        con_alternate = findViewById(R.id.con_alternate);        con_alternate.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.alt_mobile_number));        con_fax = findViewById(R.id.con_fax);        con_fax.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.fax));        con_skype = findViewById(R.id.skype);        con_skype.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.skype));        con_twitter = findViewById(R.id.twitter);        con_twitter.setHint(LanguageController.getInstance().getMobileMsgByKey(AppConstant.twitter));        recyclerView_customForm = findViewById(R.id.recyclerView_customForm);        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(this);        recyclerView_customForm.setLayoutManager(layoutManager);//        adapter = new CustomFiledQueAdpter(custOmFormQuestionsList, this, new CustomFiledQueAdpter.CustomFiledCallBack() {//            @Override//            public void CustomFiledsList() {//            }//        });//        recyclerView_customForm.setAdapter(adapter);        textInputClick();        lat_lng_view_lay = findViewById(R.id.lat_lng_view_lay);        lat_lng_txt_lable = findViewById(R.id.lat_lng_txt_lable);        lat_lng_txt_lable.setText(LanguageController.getInstance().getMobileMsgByKey(AppConstant.get_current_lat_long));        lat_lng_view_lay.setOnClickListener(this);    }    public void textInputClick() {        input_layout_name.getEditText().addTextChangedListener(this);        input_layout_con_email.getEditText().addTextChangedListener(this);        input_layout_mobile.getEditText().addTextChangedListener(this);        input_layout_Alternate.getEditText().addTextChangedListener(this);        input_layout_Fax.getEditText().addTextChangedListener(this);        input_layout_skype.getEditText().addTextChangedListener(this);        input_layout_twitter.getEditText().addTextChangedListener(this);    }    private void initilizeTextInputLayout() {        input_layout_sitename = findViewById(R.id.input_layout_sitename);        input_layout_siteadr = findViewById(R.id.input_layout_siteadr);        input_layout_sitecity = findViewById(R.id.input_layout_sitecity);        job_country_layout = findViewById(R.id.job_country_layout);        site_state_layout = findViewById(R.id.site_state_layout);        input_layout_sitepostal = findViewById(R.id.input_layout_sitepostal);        site_country_layout = findViewById(R.id.site_country_layout);        site_state_layout = findViewById(R.id.site_state_layout);        exitingContact_layout = findViewById(R.id.exitingContact_layout);        input_layout_sitename.getEditText().addTextChangedListener(this);        input_layout_siteadr.getEditText().addTextChangedListener(this);        input_layout_sitecity.getEditText().addTextChangedListener(this);        input_layout_sitepostal.getEditText().addTextChangedListener(this);        site_lat_layout.getEditText().addTextChangedListener(this);        site_lng_layout.getEditText().addTextChangedListener(this);        exitingContact_layout.getEditText().addTextChangedListener(this);    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        if (item.getItemId() == android.R.id.home) {            onBackPressed();            return true;        }        return super.onOptionsItemSelected(item);    }    @Override    public void onBackPressed() {        super.onBackPressed();    }    private void showErrorDialog(String msg) {        AppUtility.error_Alert_Dialog(this, msg, LanguageController.getInstance().getMobileMsgByKey(AppConstant.ok)                , new Callable<Boolean>() {                    @Override                    public Boolean call() throws Exception {                        return null;                    }                });    }    @Override    public void setNameError(String msg) {        showErrorDialog(msg);    }    @Override    public void setAddError(String msg) {        showErrorDialog(msg);    }    @Override    public void EditSiteviewUI(Site_model site_model) {        if (site_model.getConId() != null && !site_model.getConId().equals("0")) {            radio_newContact.setVisibility(View.GONE);            exitingContact_layout.setHintEnabled(true);            auto_exitingContact.setText(site_model.getCnm());        }        conId = site_model.getConId();        site_name.setText(siteData.getSnm());        site_add.setText(siteData.getAdr());        site_city.setText(siteData.getCity());        site_postal.setText(site_model.getZip());        site_default.setChecked(site_model.getDef().equals("1"));        edt_lat.setText(site_model.getLat());        edt_lng.setText(site_model.getLng());        String cntryname = SpinnerCountrySite.getCountryNameById(site_model.getCtry());        String statename = SpinnerCountrySite.getStatenameById(site_model.getCtry(), site_model.getState());        auto_cntry.setText(cntryname);        state_auto.setText(statename);        cntryId = Integer.parseInt(site_model.getCtry());        stateId = Integer.parseInt(site_model.getState());        if (site_model.getDef().equals("1")) {            site_default.setEnabled(false);        }        /***Eye04013 ***/        /**Eye08211*/      /*  if (site_model.getSnm().equalsIgnoreCase("self")) {            site_name.setEnabled(false);            selfSite = true;        }*/        setCustomFieldData(site_model);    }    @Override    public void refreshList(String change, String siteId) {        Intent intent = new Intent();        switch (change) {            case AppConstant.Add:                if (!siteId.equals("")) {                    intent.putExtra("siteId", siteId);                    setResult(Client_Site_List.SITE_ADD, intent);                }                finish();                break;            case AppConstant.Edit:                EotApp.getAppinstance().showToastmsg(LanguageController.getInstance().getMobileMsgByKey(AppConstant.project_site_updated_successfully));                intent.putExtra("siteId", siteId);                setResult(Client_Site_List.SITE_EDIT, intent);                finish();                break;        }    }    @Override    public void setCountryList(List<Country> counrtyList) {        AppUtility.autocompletetextviewPopUpWindow(auto_cntry);        FilterCountry countryAdapter = new FilterCountry(this, R.layout.custom_adapter_item_layout, (ArrayList<Country>) counrtyList);        auto_cntry.setAdapter(countryAdapter);        auto_cntry.setThreshold(1);        auto_cntry.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                String ctry = ((Country) adapterView.getItemAtPosition(i)).getId();                editSite_pi.getStateList(ctry);            }        });        auto_cntry.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                state_auto.setText("");                if (charSequence.length() >= 1) {                    site_country_layout.setHintEnabled(true);                } else if (charSequence.length() <= 0) {                    site_country_layout.setHintEnabled(false);                }            }            @Override            public void afterTextChanged(Editable editable) {            }        });    }    @Override    public void setStateList(List<States> statesList) {        AppUtility.autocompletetextviewPopUpWindow(state_auto);        FilterStates stateAdapter = new FilterStates(this, R.layout.custom_adapter_item_layout, (ArrayList<States>) statesList);        state_auto.setAdapter(stateAdapter);        state_auto.setThreshold(0);        state_auto.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                cntryId = Integer.parseInt(((States) adapterView.getItemAtPosition(i)).getCountry_id());                stateId = Integer.parseInt(((States) adapterView.getItemAtPosition(i)).getId());            }        });        state_auto.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if (charSequence.length() >= 1) {                    site_state_layout.setHintEnabled(true);                } else if (charSequence.length() <= 0) {                    site_state_layout.setHintEnabled(false);                }            }            @Override            public void afterTextChanged(Editable editable) {            }        });    }    @Override    public void setCountryError(String msg) {        showErrorDialog(msg);    }    @Override    public void setStateError(String msg) {        showErrorDialog(msg);    }    public void ansAnsQuesRspncModel() {        for (int i = 0; i < custOmFormQuestionsList.size(); i++) {            String key = "";            String ans = "";            ArrayList<AnswerModel> ansArrayList = new ArrayList<>();            Answer answer = null;            switch (custOmFormQuestionsList.get(i).getType()) {                case "8":                    if (custOmFormQuestionsList.get(i).getAns() != null && custOmFormQuestionsList.get(i).getAns().size() > 0) {                        AnswerModel answerModel = new AnswerModel(custOmFormQuestionsList.get(i).getAns().get(0).getKey(), custOmFormQuestionsList.get(i).getAns().get(0).getValue());                        ansArrayList.add(answerModel);                        answer = new Answer(this.custOmFormQuestionsList.get(i).getQueId(), this.custOmFormQuestionsList.get(i).getType(), ansArrayList, custOmFormQuestionsList.get(i).getFrmId());                        answerArrayList.add(answer);                    }                    break;                case "2":                case "5":                case "6":                case "7":                case "1":                    if (custOmFormQuestionsList.get(i).getAns() != null && custOmFormQuestionsList.get(i).getAns().size() > 0) {                        if (custOmFormQuestionsList.get(i).getType().equals("5")) {                            if (!TextUtils.isEmpty(custOmFormQuestionsList.get(i).getAns().get(0).getValue())) {                                long l = Long.parseLong(custOmFormQuestionsList.get(i).getAns().get(0).getValue());                                String date = AppUtility.getDate(l, "dd-MMM-yyyy");                                ans = date;                            }                        } else if (custOmFormQuestionsList.get(i).getType().equals("6")) {                            if (!TextUtils.isEmpty(custOmFormQuestionsList.get(i).getAns().get(0).getValue())) {                                long l = Long.parseLong(custOmFormQuestionsList.get(i).getAns().get(0).getValue());                                String date = AppUtility.getDate(l, "hh:mm a");                                ans = date;                            }                        } else if (custOmFormQuestionsList.get(i).getType().equals("7")) {                            if (!TextUtils.isEmpty(custOmFormQuestionsList.get(i).getAns().get(0).getValue())) {                                long l = Long.parseLong(custOmFormQuestionsList.get(i).getAns().get(0).getValue());                                String date = AppUtility.getDate(l, "dd-MMM-yyyy hh:mm a");                                ans = date;                            }                        } else                            ans = custOmFormQuestionsList.get(i).getAns().get(0).getValue();                        AnswerModel answerModel = new AnswerModel(key, ans);                        ansArrayList.add(answerModel);                        answer = new Answer(this.custOmFormQuestionsList.get(i).getQueId(),                                this.custOmFormQuestionsList.get(i).getType(), ansArrayList, custOmFormQuestionsList.get(i).getFrmId());                        answerArrayList.add(answer);                    }                    break;                case "4":                case "3":                    if (custOmFormQuestionsList.get(i).getAns() != null && custOmFormQuestionsList.get(i).getAns().size() > 0) {                        List<AnswerModel> ans1 = custOmFormQuestionsList.get(i).getAns();                        if (ans1 != null)                            for (AnswerModel am : ans1) {                                key = am.getKey();                                ans = am.getValue();                                AnswerModel answerModel = new AnswerModel(key, ans);                                ansArrayList.add(answerModel);                            }                    }                    if (ansArrayList.size() > 0) {                        answer = new Answer(this.custOmFormQuestionsList.get(i).getQueId(), this.custOmFormQuestionsList.get(i).getType(), ansArrayList, custOmFormQuestionsList.get(i).getFrmId());                        answerArrayList.add(answer);                    } else {                        answer = new Answer(this.custOmFormQuestionsList.get(i).getQueId(),                                this.custOmFormQuestionsList.get(i).getType(), ansArrayList, custOmFormQuestionsList.get(i).getFrmId());                        answerArrayList.add(answer);                    }                    break;            }        }    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.lat_lng_view_lay:                getLocation();                break;            case R.id.auto_exitingContact:                auto_exitingContact.showDropDown();                break;            case R.id.site_btn:                String snm, adr, city, zip, def, countryname, statename;                snm = site_name.getText().toString().trim();                adr = site_add.getText().toString().trim();                city = site_city.getText().toString().trim();                zip = site_postal.getText().toString().trim();                def = site_default.isChecked() ? "1" : "0";                countryname = auto_cntry.getText().toString().trim();                statename = state_auto.getText().toString().trim();                if (editSite_pi.validationCheck(snm, adr, countryname, statename)) {                    ansAnsQuesRspncModel();                    if (siteData == null) {                     /*   if (snm.equalsIgnoreCase("self")) {                            setNameError(LanguageController.getInstance().getMobileMsgByKey(AppConstant.self_validation_msg));                            return;                        }*/                        /**This for Custom field Ans*****/                        Ans_Req ans_req = null;                        if (answerArrayList.size() > 0) {                            ans_req = new Ans_Req(answerArrayList, "", "");//custOmFomQuestionsList.get(0).getFrmId()                        } else {                            ans_req = new Ans_Req();                        }                        /***Add site**/                        AddSiteModel addSiteModel = null;                        if (isAddContact.equals("1")) {                            addSiteModel = new AddSiteModel(App_preference.getSharedprefInstance().getLoginRes().getCompId(),                                    cltId, snm, adr, city, stateId, cntryId, zip, def                                    , edt_lat.getText().toString(), edt_lng.getText().toString()                                    , conId, isAddContact, con_name.getText().toString().trim(), con_email.getText().toString().trim(), con_mob.getText().toString().trim(), con_alternate.getText().toString().trim(), con_fax.getText().toString().trim(), con_twitter.getText().toString().trim(), con_skype.getText().toString().trim()                                    , ans_req.getAnswer());                            if (editSite_pi.validationForContact(con_name.getText().toString().trim(), con_email.getText().toString().trim(), con_mob.getText().toString().trim(), con_alternate.getText().toString().trim())) {                                editSite_pi.AddNewSite(addSiteModel, custOmFormQuestionsList);                            }                        } else {                            addSiteModel = new AddSiteModel(conId, isAddContact, App_preference.getSharedprefInstance().                                    getLoginRes().getCompId(),                                    cltId, snm, adr, city, stateId, cntryId, zip, def                                    , edt_lat.getText().toString(), edt_lng.getText().toString(), auto_exitingContact.getText().toString().trim()                                    , ans_req.getAnswer());                            editSite_pi.AddNewSite(addSiteModel, custOmFormQuestionsList);                        }                    } else {                       /* if (!selfSite) {                            if (snm.equalsIgnoreCase("self")) {                                setNameError(LanguageController.getInstance().getMobileMsgByKey(AppConstant.self_validation_msg));                                return;                            }                        }*/                        /**This for Custom field Ans*****/                        Ans_Req ans_req = null;                        if (answerArrayList.size() > 0) {                            ans_req = new Ans_Req(                                    answerArrayList, "", siteData.getSiteId());                        } else {                            ans_req = new Ans_Req();                        }                        if (isAddContact.equals("0")) {                            EditSiteModel editSiteModel = new EditSiteModel(siteData.getCltId(), siteData.getSiteId(), snm, adr, city, stateId, cntryId, zip, def, edt_lat.getText().toString(), edt_lng.getText().toString()                                    , isAddContact, conId,                                    auto_exitingContact.getText().toString().trim(), con_email.getText().toString().trim(), con_mob.getText().toString().trim(),                                    con_alternate.getText().toString().trim(), con_fax.getText().toString().trim(), con_skype.getText().toString().trim(), con_twitter.getText().toString().trim()                                    , ans_req.getAnswer());                            editSite_pi.EditClientSite(editSiteModel, custOmFormQuestionsList);                        } else {                            EditSiteModel editSiteModel = new EditSiteModel(siteData.getCltId(), siteData.getSiteId(),                                    snm, adr, city, stateId, cntryId, zip, def, edt_lat.getText().toString(),                                    edt_lng.getText().toString()                                    , isAddContact, conId,                                    con_name.getText().toString().trim(),                                    con_email.getText().toString().trim(), con_mob.getText().toString().trim(),                                    con_alternate.getText().toString().trim(),                                    con_fax.getText().toString().trim(), con_skype.getText().toString().trim(),                                    con_twitter.getText().toString().trim()                                    , ans_req.getAnswer());                            if (editSite_pi.validationForContact(con_name.getText().toString().trim(), con_email.getText().toString().trim(), con_mob.getText().toString().trim(), con_alternate.getText().toString().trim())) {                                editSite_pi.EditClientSite(editSiteModel, custOmFormQuestionsList);                            }                        }                    }                }                break;            case R.id.state_auto:                state_auto.showDropDown();                break;            case R.id.auto_cntry:                auto_cntry.showDropDown();                break;        }    }    @Override    public void setEmailError(String msg) {        showErrorDialog(msg);    }    @Override    public void setMobError(String msg) {        showErrorDialog(msg);    }    @Override    public void setAlterNateError(String alternate_No) {        showErrorDialog(alternate_No);    }    @Override    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {    }    @Override    public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {        if (charSequence.length() >= 1) {            if (charSequence.hashCode() == site_name.getText().hashCode())                input_layout_sitename.setHintEnabled(true);            if (charSequence.hashCode() == site_add.getText().hashCode())                input_layout_siteadr.setHintEnabled(true);            if (charSequence.hashCode() == site_city.getText().hashCode())                input_layout_sitecity.setHintEnabled(true);            if (charSequence.hashCode() == site_postal.getText().hashCode())                input_layout_sitepostal.setHintEnabled(true);            if (charSequence.hashCode() == edt_lat.getText().hashCode())                site_lat_layout.setHintEnabled(true);            if (charSequence.hashCode() == edt_lng.getText().hashCode())                site_lng_layout.setHintEnabled(true);            if (charSequence.hashCode() == con_name.getText().hashCode())                input_layout_name.setHintEnabled(true);            if (charSequence.hashCode() == con_email.getText().hashCode())                input_layout_con_email.setHintEnabled(true);            if (charSequence.hashCode() == con_mob.getText().hashCode())                input_layout_mobile.setHintEnabled(true);            if (charSequence.hashCode() == con_alternate.getText().hashCode())                input_layout_Alternate.setHintEnabled(true);            if (charSequence.hashCode() == con_fax.getText().hashCode())                input_layout_Fax.setHintEnabled(true);            if (charSequence.hashCode() == con_skype.getText().hashCode())                input_layout_skype.setHintEnabled(true);            if (charSequence.hashCode() == con_twitter.getText().hashCode())                input_layout_twitter.setHintEnabled(true);        } else if (charSequence.length() <= 0) {            if (charSequence.hashCode() == site_name.getText().hashCode())                input_layout_sitename.setHintEnabled(false);            if (charSequence.hashCode() == site_add.getText().hashCode())                input_layout_siteadr.setHintEnabled(false);            if (charSequence.hashCode() == site_city.getText().hashCode())                input_layout_sitecity.setHintEnabled(false);            if (charSequence.hashCode() == site_postal.getText().hashCode())                input_layout_sitepostal.setHintEnabled(false);            if (charSequence.hashCode() == edt_lat.getText().hashCode())                site_lat_layout.setHintEnabled(false);            if (charSequence.hashCode() == edt_lng.getText().hashCode())                site_lng_layout.setHintEnabled(false);            if (charSequence.hashCode() == con_name.getText().hashCode())                input_layout_name.setHintEnabled(false);            if (charSequence.hashCode() == con_email.getText().hashCode())                input_layout_con_email.setHintEnabled(false);            if (charSequence.hashCode() == con_mob.getText().hashCode())                input_layout_mobile.setHintEnabled(false);            if (charSequence.hashCode() == con_alternate.getText().hashCode())                input_layout_Alternate.setHintEnabled(false);            if (charSequence.hashCode() == con_fax.getText().hashCode())                input_layout_Fax.setHintEnabled(false);            if (charSequence.hashCode() == con_skype.getText().hashCode())                input_layout_skype.setHintEnabled(false);            if (charSequence.hashCode() == con_twitter.getText().hashCode())                input_layout_twitter.setHintEnabled(false);        }    }    @Override    public void afterTextChanged(Editable editable) {    }}